1. 类似C/C#和Java的条件运算符? :
def factorial(n):
    """return n!"""
    return 1 if n < 2 else n * factorial(n - 1)

2. 参数传递
def tag(name, *content, cls=None, **attrs):
    if cls is not None:
        attrs['class'] = cls

    if attrs:
        attr_str = ''.join(' %s="%s"' % (attr, value)
                           for attr, value
                           in sorted(attrs.items()))
    else:
        attr_str = ''

    if content:
        return '\n'.join('<%s %s>%s</%s>' % (name, attr_str, c, name) for c in content)
    else:
        return '<%s %s/>' % (name, attr_str)

    print(tag('br'))
    print(tag('br', 'hello', 'world'))
    print(tag(content='testing', name='img'))
    print(tag('br', 'hello', id=33))
    my_tag = {'name': 'img', 'title': 'Sunset Boulevard', 'src': 'sunset.jpg', 'cls': 'framed'}
    # my_tag = {'name': 'img', 'cls': 'framed'}
    print(tag(**my_tag))

3. globals()返回一个字典，表示当前的全局符号表。
promos = [globals() [name] for name in globals()
            if name.endswith('_promo')
            and name != 'best_promo']